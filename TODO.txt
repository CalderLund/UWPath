Note: list is sorted by highest priority

TODO: *Start from Faculty of Math then expand (IGNORE SOFTWARE ENGINEERING)
- parse majors, minors, options, etc. from urls like http://ugradcalendar.uwaterloo.ca/page/printable/11685
    - Then expand to automate parsing of all other pages (potentially using selenium)
- parse list of all academic plans for math (Plans Table)
- Organize documents into relevant directories before project becomes too large
- document CourseParser.py
- add parsing functionality for additional subjects
- make nicer README
- Design frontend
- Add contact us section for customer input
- Parse UWFlow for Course difficulty, usefulness and availability
- Breath and Depth for CS
- In the future add different course calender years for academic plans (up to 5 years in history)


After fixing stuff, we should be able to call directly from db to start making API that allows us to make functions such as:
• are prereqs met?
• are there antireqs?
• is the major/minor/option requirement satisfied?
• give courses prereqs? (including the prereq's prereqs)
• how many credits have been received?
• how many credits needed?
• etc.

Please list what other feature will be needed that you can think of.


Deficiencies:
- "(MATH 106 or 114 or 115 with a grade of at least 70%)" should all be 70 rather than 50, 50, 70
- "Cumulative overall average of at least 80%" needs a field
- Functionality incorrect: CS 146 or a grade of 60% or higher in CS 136 or 138 (lack of "one of")
- remove inefficiencies in Requirements.py with calling same loop multiple times
- Prereqs and Antireqs classes do not accept text like or "Antireq: All second,third or fourth year CS courses or equivalents"
- CS 600- or 700-level courses Not parsed in degree req
